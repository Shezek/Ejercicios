# -*- coding: utf-8 -*-
"""datasets.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/Shezek/a89c88c992c8220fa5d384ca035f262b/datasets.ipynb

"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Configurar estilo de gráficos
sns.set(style='whitegrid')

# Cargar dataset
url = 'https://raw.githubusercontent.com/veekun/pokedex/master/pokedex/data/csv/pokemon.csv'
df = pd.read_csv(url)

# Mostrar primeras filas
df.head()

# Ver info general del dataset
df.info()

# Verificar valores nulos
df.isnull().sum()

# Normalizar nombres de columnas
df.columns = [col.strip().lower().replace(' ', '_') for col in df.columns]

# Eliminar duplicados
df.drop_duplicates(inplace=True)

df.head()

# Estadísticas básicas
df.describe()

# Media y desviación estándar del peso
print('Media de peso:', df['weight'].mean())
print('Desviación peso:', df['weight'].std())

# Conteo por agresividad
if 'agresividad' in df.columns:
    print(df['agresividad'].value_counts())
else:
    print('La columna "agresividad" no está presente en el dataset.')

# Agrupar por peso y calcular medias de estadísticas
if 'weight' in df.columns:
    df.groupby('weight')[['weight', 'height', 'base_experience']].mean().round(2)
else:
    print('No se puede agrupar por weight.')

# skr

# Gráfico de barras por altura
if 'height' in df.columns:
    plt.figure(figsize=(10, 6))
    df['height'].value_counts().plot(kind='bar', color='coral')
    plt.title('Cantidad de Pokémon por Altura')
    plt.xlabel('Altura')
    plt.ylabel('Cantidad')
    plt.xticks(rotation=45)
    plt.show()
else:
    print('No se puede graficar type1.')

# Dispersión peso vs altura
if 'is_default' in df.columns:
    plt.figure(figsize=(8, 5))
    sns.scatterplot(x='weight', y='height', data=df, hue='is_default', legend=False)
    plt.title('peso vs altura')
    plt.show()
else:
    print('No se puede graficar.')
